🔗 ALUR JOIN DARI GOOD RECEIVE KE FLOOR ORDER

┌─────────────────────────────────────────────────────────────────────────────────┐
│                           GOOD RECEIVE (GR) FLOW                               │
└─────────────────────────────────────────────────────────────────────────────────┘

1️⃣ OUTLET FOOD GOOD RECEIVES (gr)
   ├── id (PK)
   ├── outlet_id → tbl_data_outlet
   ├── delivery_order_id → delivery_orders
   ├── receive_date
   └── deleted_at

2️⃣ OUTLET FOOD GOOD RECEIVE ITEMS (i)
   ├── id (PK)
   ├── outlet_food_good_receive_id → gr.id
   ├── item_id → items
   ├── unit_id → units
   ├── received_qty ← QUANTITY YANG DI-RECEIVE
   └── (TIDAK ADA HARGA DI SINI!)

3️⃣ ITEMS (it)
   ├── id (PK)
   ├── name
   ├── sub_category_id → sub_categories
   ├── warehouse_division_id → warehouse_division
   └── (TIDAK ADA HARGA DI SINI!)

4️⃣ DELIVERY ORDERS (do)
   ├── id (PK)
   ├── floor_order_id → food_floor_orders ← KUNCI UNTUK DAPAT HARGA!
   └── (Mengacu ke Floor Order)

5️⃣ FOOD FLOOR ORDER ITEMS (fo) ← SUMBER HARGA!
   ├── id (PK)
   ├── floor_order_id → food_floor_orders
   ├── item_id → items
   ├── price ← HARGA ADA DI SINI!
   └── (Harga ditetapkan saat Floor Order dibuat)

┌─────────────────────────────────────────────────────────────────────────────────┐
│                              JOIN SEQUENCE                                     │
└─────────────────────────────────────────────────────────────────────────────────┘

gr.id = i.outlet_food_good_receive_id
    ↓
i.item_id = it.id
    ↓
it.sub_category_id = sc.id
    ↓
i.unit_id = u.id
    ↓
gr.delivery_order_id = do.id
    ↓
i.item_id = fo.item_id AND fo.floor_order_id = do.floor_order_id ← KEY JOIN!
    ↓
it.warehouse_division_id = wd.id (LEFT JOIN)
    ↓
wd.warehouse_id = w.id (LEFT JOIN)
    ↓
gr.outlet_id = o.id_outlet

┌─────────────────────────────────────────────────────────────────────────────────┐
│                              FINAL CALCULATION                                 │
└─────────────────────────────────────────────────────────────────────────────────┘

SUBTOTAL = i.received_qty × fo.price

KATEGORI berdasarkan:
├── w.name (warehouse): MK1, MK2, MAIN STORE
└── sc.name (sub_category): Chemical, Stationary, Marketing, dll

┌─────────────────────────────────────────────────────────────────────────────────┐
│                              WHY THIS JOIN?                                    │
└─────────────────────────────────────────────────────────────────────────────────┘

❓ MENGAPA HARUS JOIN KE FLOOR ORDER?
✅ Karena harga disimpan di Floor Order Items, bukan di GR Items
✅ GR Items hanya menyimpan quantity yang benar-benar di-receive
✅ Harga sudah ditetapkan saat Floor Order dibuat (sebelum delivery)

❓ MENGAPA TIDAK LANGSUNG DARI ITEMS KE FLOOR ORDER?
✅ Karena 1 item bisa punya harga berbeda di floor order yang berbeda
✅ Perlu memastikan floor order yang sama dengan delivery order

❓ MENGAPA PERLU DELIVERY ORDERS?
✅ Delivery Orders adalah jembatan antara GR dan Floor Order
✅ GR dibuat berdasarkan Delivery Order
✅ Delivery Order mengacu ke Floor Order

┌─────────────────────────────────────────────────────────────────────────────────┐
│                              POTENTIAL ISSUES                                  │
└─────────────────────────────────────────────────────────────────────────────────┘

⚠️  MISSING FLOOR ORDER ITEMS
    → Item di GR tidak ada di Floor Order
    → Solusi: LEFT JOIN + COALESCE(fo.price, 0)

⚠️  WRONG FLOOR ORDER REFERENCE
    → delivery_order.floor_order_id salah
    → Solusi: Validasi data integrity

⚠️  MULTIPLE FLOOR ORDER ITEMS
    → Duplikasi item di floor order
    → Solusi: Unique constraint di database

┌─────────────────────────────────────────────────────────────────────────────────┐
│                              EXAMPLE DATA FLOW                                 │
└─────────────────────────────────────────────────────────────────────────────────┘

Floor Order #100:
├── Item A: Price 10,000
└── Item B: Price 15,000

Delivery Order #200 (floor_order_id: 100):
└── Mengacu ke Floor Order #100

Good Receive #300 (delivery_order_id: 200):
├── Item A: Qty 5
└── Item B: Qty 3

RESULT:
├── Item A: 5 × 10,000 = 50,000
└── Item B: 3 × 15,000 = 45,000
TOTAL: 95,000
